# Redis Configuration for Fast Startup
# Save configuration - optimized for development/demo
# Format: save <seconds> <changes>
# This will save the dataset if at least 1 key changed in 900 seconds (15 min)
save 900 1

# Disable some persistence features for faster startup
# Comment these out if you need full persistence
appendonly no
appendfsync no

# Memory management
maxmemory 256mb
maxmemory-policy allkeys-lru

# Network settings
tcp-keepalive 300
timeout 0

# Logging
loglevel notice

# Security - bind to all interfaces (for Docker networking)
bind 0.0.0.0

# Performance optimizations
tcp-backlog 511
databases 16

# Disable protected mode for Docker
protected-mode no

# Faster startup by reducing unnecessary work
lazyfree-lazy-eviction yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes
replica-lazy-flush yes

# Optimize memory usage patterns
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# Client output buffer limits (prevent memory issues)
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Reduce latency
hz 10
dynamic-hz yes

# Threading (if Redis 6+)
io-threads 2
io-threads-do-reads yes